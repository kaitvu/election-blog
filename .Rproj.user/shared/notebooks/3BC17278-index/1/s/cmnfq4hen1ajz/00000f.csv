"0","# sept poll data"
"0","poll <- d_pollav_nat |>"
"0","  select(year, weeks_left, poll_date, poll_support, party) |>"
"0","  filter(month(poll_date) == 9) |>"
"0","  group_by(year, party) |>"
"0","  summarize(sept_poll = round(weighted.mean(poll_support, weeks_left, na.rm = TRUE),2)) |>"
"0","  left_join(d_pv, by = c(""year"", ""party"")) |>"
"0","  select(year, party, sept_poll)"
"1","[38;5;232m`summarise()` has grouped output by 'year'. You can override using the `.groups` argument.[39m
"
"0","# train combined model"
"0","train <- d_pv |> "
"0","  left_join(fred_econ, by = ""year"") |> "
"0","  filter(year >= 1968, "
"0","         incumbent_party) |>"
"0","  mutate(incumbent = as.numeric(incumbent)) |>"
"0","  left_join(poll, by = c(""year"", ""party""))"
"0",""
"0","# table 6: week 4 combined regression model"
"0","combined <- lm(pv2p ~ GDP_growth_quarterly + RDPI_growth_quarterly + sept_poll + incumbent, "
"0","                   data = subset(train, year < 2020))"
"0",""
"0","tab_model(combined, show.se = TRUE, "
"0","          title = ""Regression Table for Combined Model (2000-2016)"", "
"0","          dv.labels = ""National Popular Vote Share for Incumbent Party Candidate"")"
