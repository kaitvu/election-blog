plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# plot 1: expert prediction 2020 maps
cook_map + sabato_map + actual_map +
plot_layout(nrow = 2)
# expert prediction data set
d_expert <- d_cook_2020 |>
left_join(d_sabato_2020, by = "state") |>
mutate(rating_match = as.numeric(cook_rating == sabato_rating))
# table 5: expert mismatch table
mismatch_table <- d_expert[d_expert$state %in% c(d_expert$state[d_expert$rating_match == 0]),] |>
select(state, cook_text_rating, sabato_text_rating)
color_palette <- c("Solid Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Toss Up" = "#CCCCCC",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Solid Republican" = "firebrick3",
"Democrat" = "dodgerblue4",
"Republican" = "firebrick3")
knitr::kable(mismatch_table,
col.names = c("State", "Cook Political Report", "Sabato's Crystal Ball")) |>
kableExtra::kable_styling(full_width = FALSE) |>
column_spec(2,
background = color_palette[mismatch_table$cook_text_rating],
color = "white") |>
column_spec(3,
background = color_palette[mismatch_table$sabato_text_rating],
color = "white")
# merge with state pv data
d_state_pv_2020 <- d_state_pv |>
filter(year == 2020) |>
mutate(R_pv2p = 100-D_pv2p) |>
select(state, year, R_pv2p, D_pv2p) |>
mutate(margin = D_pv2p - R_pv2p,
winner = ifelse(D_pv2p > R_pv2p, "D", "R"))
d_state_pv_2020[d_state_pv_2020$state == "District Of Columbia",]$state <- "District of Columbia"
d_expert <- d_expert |>
left_join(d_state_pv_2020, by = "state") |>
mutate(cook_correct = as.numeric((winner == "D" & cook_rating < 4) |
(winner == "R" & cook_rating > 4)),
sabato_correct = as.numeric((winner == "D" & sabato_rating < 4) |
(winner == "R" & sabato_rating > 4))) |>
drop_na()
# table 6: expert correct table
correct_table <- d_expert |>
select(cook_correct, sabato_correct) |>
colMeans()
correct_table <- as.data.frame(t(correct_table))
correct_table <- correct_table |>
pivot_longer(cols = everything(),
names_to = "Model",
values_to = "Percent Correct") |>
mutate(Model = recode(Model,
cook_correct = "Cook Political Report",
sabato_correct = "Sabato's Crystal Ball"),
`Percent Correct` = round(`Percent Correct`*100,2))
knitr::kable(correct_table,
col.names = c("Model", "Percent Correct")) |>
kableExtra::kable_styling(full_width = FALSE)
# table 7: cook incorrect table
cook_wrong <- d_expert[d_expert$cook_correct == 0,]
cook_wrong <- as.data.frame(cook_wrong)
cook_wrong <- cook_wrong |>
select(state, cook_text_rating, margin, winner) |>
mutate(margin = round(margin, 2),
winner = recode(winner,
"R" = "Republican",
"D" = "Democrat"))
knitr::kable(cook_wrong,
col.names = c("State", "Rating", "Margin", "Winner")) |>
kableExtra::kable_styling(full_width = FALSE) |>
column_spec(2,
background = color_palette[cook_wrong$cook_text_rating],
color = "white") |>
column_spec(4,
background = color_palette[cook_wrong$winner],
color = "white")
# sabato incorrect table
sabato_wrong <- d_expert[d_expert$sabato_correct == 0,]
sabato_wrong <- as.data.frame(sabato_wrong)
sabato_wrong <- sabato_wrong |>
select(state, sabato_text_rating, margin, winner) |>
mutate(margin = round(margin, 2),
winner = recode(winner,
"R" = "Republican",
"D" = "Democrat"))
knitr::kable(sabato_wrong,
col.names = c("State", "Rating", "Margin", "Winner")) |>
kableExtra::kable_styling(full_width = FALSE) |>
column_spec(2,
background = color_palette[sabato_wrong$sabato_text_rating],
color = "white") |>
column_spec(4,
background = color_palette[sabato_wrong$winner],
color = "white")
(cook_map + plot_spacer() + sabato_map) / (plot_spacer() + actual_map + plot_spacer())
layout <- "
AAABB#
##CC##"
cook_map + sabato_map + actual_map + plot_layout(design = layout)
library(blogdown)
build_library(build_rmd = TRUE)
build_site(build_rmd = TRUE)
# hide code
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE)
# import libraries
library(car)
library(caret)
library(CVXR)
library(glmnet)
library(tidyverse)
library(patchwork)
library(knitr)
library(sjPlot)
library(kableExtra)
library(maps)
library(readr)
library(stringr)
# import data
d_pollav_nat <- read_csv("national_polls_1968-2024.csv")
fred_econ <- read_csv("fred_econ.csv") |>
filter(quarter == 2)
d_pv <- read_csv("popvote_1948-2020.csv")
d_pv$party[d_pv$party == "democrat"] <- "DEM"
d_pv$party[d_pv$party == "republican"] <- "REP"
d_state_pv <- read_csv("state_popvote_1948_2020.csv")
d_state_pv <- d_state_pv |>
select(year, state, D_pv2p)
states <- map_data("state") |>
rename(state = region)
states$state <- str_to_title(states$state)
# expert data
d_cook <- read_csv("CPR_EC_Ratings.csv")[,-1] |>
mutate(rating_numeric = case_when(Rating == "Solid D" ~ 1,
Rating == "Likely D" ~ 2,
Rating == "Lean D" ~ 3,
Rating == "Toss Up" ~ 4,
Rating == "Lean R" ~ 5,
Rating == "Likely R" ~ 6,
Rating == "Solid R" ~ 7)) |>
mutate(solid_D = as.numeric(rating_numeric == 1),
likely_D = as.numeric(rating_numeric == 2),
lean_D = as.numeric(rating_numeric == 3),
toss_up = as.numeric(rating_numeric == 4),
lean_R = as.numeric(rating_numeric == 5),
likely_R = as.numeric(rating_numeric == 6),
solid_R = as.numeric(rating_numeric == 7))
d_sabato <- read_csv("sabato_crystal_ball_ratings.csv") |>
rename(state_abb = state)
state_abb_xwalk <- d_state_pv |>
mutate(state_abb = state.abb[match(d_state_pv$state, state.name)]) |>
select(state, state_abb) |>
distinct()
state_abb_xwalk[51,]$state <- "District of Columbia"
state_abb_xwalk[51,]$state_abb <- "DC"
d_sabato <- d_sabato |>
left_join(state_abb_xwalk, by = "state_abb") |>
mutate(safe_D = as.numeric(rating == 1),
likely_D = as.numeric(rating == 2),
lean_D = as.numeric(rating == 3),
toss_up = as.numeric(rating == 4),
lean_R = as.numeric(rating == 5),
likely_R = as.numeric(rating == 6),
safe_R = as.numeric(rating == 7)) |>
rename(sabato_rating = rating)
# table 1: incumbent party descriptive
incumbent_party_table <- d_pv |>
filter(winner) |>
select(year, win_party = party, win_cand = candidate) |>
mutate(win_party_last = lag(win_party, order_by = year),
win_cand_last = lag(win_cand, order_by = year)) |>
mutate(reelect_party = win_party_last == win_party) |>
filter(year > 1948 & year < 2024) |>
group_by(reelect_party) |>
summarize(N = n()) |>
mutate(Percent = round(N/sum(N) * 100, 2))
knitr::kable(incumbent_party_table,
col.names = c("Incumbent Party Re-Elected", "Number of Elections", "Percentage")) |>
kableExtra::kable_styling(full_width = FALSE)
# table 2: former vp descriptive
vp_table <- d_pv |>
filter(year %in% c(1960, 1968, 1984, 1988, 2000, 2020)) |>
mutate(vp = if_else(candidate %in% c("Nixon, Richard M.",
"Humphrey, Hubert",
"Mondale, Walter",
"Bush, George H.W.",
"Gore, Al",
"Biden, Joseph R."), 1, 0)) |>
filter(vp == 1) |>
group_by(winner) |>
summarise(n = n()) |>
mutate(percent = round((n / sum(n)) * 100, 2))
knitr::kable(vp_table,
col.names = c("VP Elected", "Number of Elections", "Percentage")) |>
kableExtra::kable_styling(full_width = FALSE)
# sept poll data
poll <- d_pollav_nat |>
select(year, weeks_left, poll_date, poll_support, party) |>
filter(month(poll_date) == 9) |>
group_by(year, party) |>
summarize(sept_poll = round(weighted.mean(poll_support, weeks_left, na.rm = TRUE),2)) |>
left_join(d_pv, by = c("year", "party")) |>
select(year, party, sept_poll)
# train combined fundamentals-polling model
train <- d_pv |>
left_join(fred_econ, by = "year") |>
filter(year >= 1968,
incumbent_party) |>
mutate(incumbent = as.numeric(incumbent)) |>
left_join(poll, by = c("year", "party"))
# table 3: combined regression model
combined <- lm(pv2p ~ GDP_growth_quarterly + RDPI_growth_quarterly + sept_poll + incumbent,
data = subset(train, year < 2020))
tab_model(combined, show.se = TRUE,
title = "Regression Table for Combined Model (2000-2016)",
dv.labels = "National Popular Vote Share for Incumbent Party Candidate")
# econ 2024 data
econ_24 <- fred_econ |>
filter(year == 2024) |>
select(year, GDP_growth_quarterly, RDPI_growth_quarterly)
# polling 2024 data
poll_24 <- d_pollav_nat |>
filter(month(poll_date) == 9,
year == 2024,
party == "DEM") |>
group_by(year) |>
summarize(sept_poll = round(weighted.mean(poll_support, weeks_left, na.rm = TRUE),2))
pred_data <- left_join(econ_24, poll_24, by = "year") |>
mutate(incumbent = 0)
# 2024 prediction
combined_pred <- predict(combined, pred_data, interval = "prediction")
combined_pred <- round(combined_pred, 2)
# table 4: combined model prediction
knitr::kable(combined_pred,
col.names = c("Prediction", "Lower Bound", "Upper Bound")) |>
kableExtra::kable_styling(full_width = FALSE)
# sabato 2020 map
d_sabato_2020 <- d_sabato |>
filter(year == 2020) |>
mutate(sabato_text_rating = factor(sabato_rating, levels = 1:7,
labels = c("Safe Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Safe Republican"))) |>
select(state, sabato_rating, sabato_text_rating)
sabato_map <- d_sabato_2020 |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = sabato_text_rating), color = "white") +
scale_fill_manual(values = c(
"Safe Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Safe Republican" = "firebrick3"),
labels = c("Safe Democrat",
"Likely Democrat",
"Lean Democrat",
"Lean Republican",
"Likely Republican",
"Safe Republican")) +
labs(
title = "Sabato's Crystal Ball",
fill = "Rating"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# cook political 2020 map
d_cook_2020 <- d_cook |>
filter(Cycle == 2020) |>
mutate(cook_text_rating = factor(rating_numeric, levels = 1:7,
labels = c("Solid Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Solid Republican"))) |>
rename(state = State,
cook_rating = rating_numeric) |>
select(cook_text_rating, state, cook_rating)
cook_map <- d_cook_2020 |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = cook_text_rating), color = "white") +
scale_fill_manual(values = c(
"Solid Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Toss Up" = "#CCCCCC",
"Likely Republican" = "#FF6666",
"Solid Republican" = "firebrick3"),
labels = c("Solid Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Likely Republican",
"Solid Republican")) +
labs(
title = "Cook Political Report",
fill = "Rating"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# actual 2024 map
actual_map <- d_state_pv |>
filter(year == 2020) |>
mutate(R_pv2p = 100-D_pv2p,
winner = ifelse(R_pv2p > D_pv2p, "Republican", "Democrat")) |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = winner), color = "white") +
scale_fill_manual(values = c(
"Democrat" = "dodgerblue4",
"Republican" = "firebrick3"
)) +
labs(
title = "Actual 2020 Map",
fill = "Winner"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# plot 1: expert prediction 2020 maps
layout <- "
AAABB#
##CC##"
cook_map + sabato_map + actual_map + plot_layout(design = layout)
# expert prediction data set
d_expert <- d_cook_2020 |>
left_join(d_sabato_2020, by = "state") |>
mutate(rating_match = as.numeric(cook_rating == sabato_rating))
# table 5: expert mismatch table
mismatch_table <- d_expert[d_expert$state %in% c(d_expert$state[d_expert$rating_match == 0]),] |>
select(state, cook_text_rating, sabato_text_rating)
color_palette <- c("Solid Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Toss Up" = "#CCCCCC",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Solid Republican" = "firebrick3",
"Democrat" = "dodgerblue4",
"Republican" = "firebrick3")
knitr::kable(mismatch_table,
col.names = c("State", "Cook Political Report", "Sabato's Crystal Ball")) |>
kableExtra::kable_styling(full_width = FALSE) |>
column_spec(2,
background = color_palette[mismatch_table$cook_text_rating],
color = "white") |>
column_spec(3,
background = color_palette[mismatch_table$sabato_text_rating],
color = "white")
# merge with state pv data
d_state_pv_2020 <- d_state_pv |>
filter(year == 2020) |>
mutate(R_pv2p = 100-D_pv2p) |>
select(state, year, R_pv2p, D_pv2p) |>
mutate(margin = D_pv2p - R_pv2p,
winner = ifelse(D_pv2p > R_pv2p, "D", "R"))
d_state_pv_2020[d_state_pv_2020$state == "District Of Columbia",]$state <- "District of Columbia"
d_expert <- d_expert |>
left_join(d_state_pv_2020, by = "state") |>
mutate(cook_correct = as.numeric((winner == "D" & cook_rating < 4) |
(winner == "R" & cook_rating > 4)),
sabato_correct = as.numeric((winner == "D" & sabato_rating < 4) |
(winner == "R" & sabato_rating > 4))) |>
drop_na()
# table 6: expert correct table
correct_table <- d_expert |>
select(cook_correct, sabato_correct) |>
colMeans()
correct_table <- as.data.frame(t(correct_table))
correct_table <- correct_table |>
pivot_longer(cols = everything(),
names_to = "Model",
values_to = "Percent Correct") |>
mutate(Model = recode(Model,
cook_correct = "Cook Political Report",
sabato_correct = "Sabato's Crystal Ball"),
`Percent Correct` = round(`Percent Correct`*100,2))
knitr::kable(correct_table,
col.names = c("Model", "Percent Correct")) |>
kableExtra::kable_styling(full_width = FALSE)
# table 7: cook incorrect table
cook_wrong <- d_expert[d_expert$cook_correct == 0,]
cook_wrong <- as.data.frame(cook_wrong)
cook_wrong <- cook_wrong |>
select(state, cook_text_rating, margin, winner) |>
mutate(margin = round(margin, 2),
winner = recode(winner,
"R" = "Republican",
"D" = "Democrat"))
knitr::kable(cook_wrong,
col.names = c("State", "Rating", "Margin", "Winner")) |>
kableExtra::kable_styling(full_width = FALSE) |>
column_spec(2,
background = color_palette[cook_wrong$cook_text_rating],
color = "white") |>
column_spec(4,
background = color_palette[cook_wrong$winner],
color = "white")
# sabato incorrect table
sabato_wrong <- d_expert[d_expert$sabato_correct == 0,]
sabato_wrong <- as.data.frame(sabato_wrong)
sabato_wrong <- sabato_wrong |>
select(state, sabato_text_rating, margin, winner) |>
mutate(margin = round(margin, 2),
winner = recode(winner,
"R" = "Republican",
"D" = "Democrat"))
knitr::kable(sabato_wrong,
col.names = c("State", "Rating", "Margin", "Winner")) |>
kableExtra::kable_styling(full_width = FALSE) |>
column_spec(2,
background = color_palette[sabato_wrong$sabato_text_rating],
color = "white") |>
column_spec(4,
background = color_palette[sabato_wrong$winner],
color = "white")
# hide code
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE)
# import libraries
library(car)
library(caret)
library(CVXR)
library(glmnet)
library(tidyverse)
library(patchwork)
library(knitr)
library(sjPlot)
library(kableExtra)
library(maps)
library(readr)
library(stringr)
# import data
d_pollav_nat <- read_csv("national_polls_1968-2024.csv")
fred_econ <- read_csv("fred_econ.csv") |>
filter(quarter == 2)
d_pv <- read_csv("popvote_1948-2020.csv")
d_pv$party[d_pv$party == "democrat"] <- "DEM"
d_pv$party[d_pv$party == "republican"] <- "REP"
d_state_pv <- read_csv("state_popvote_1948_2020.csv")
d_state_pv <- d_state_pv |>
select(year, state, D_pv2p)
states <- map_data("state") |>
rename(state = region)
states$state <- str_to_title(states$state)
# expert data
d_cook <- read_csv("CPR_EC_Ratings.csv")[,-1] |>
mutate(rating_numeric = case_when(Rating == "Solid D" ~ 1,
Rating == "Likely D" ~ 2,
Rating == "Lean D" ~ 3,
Rating == "Toss Up" ~ 4,
Rating == "Lean R" ~ 5,
Rating == "Likely R" ~ 6,
Rating == "Solid R" ~ 7)) |>
mutate(solid_D = as.numeric(rating_numeric == 1),
likely_D = as.numeric(rating_numeric == 2),
lean_D = as.numeric(rating_numeric == 3),
toss_up = as.numeric(rating_numeric == 4),
lean_R = as.numeric(rating_numeric == 5),
likely_R = as.numeric(rating_numeric == 6),
solid_R = as.numeric(rating_numeric == 7))
d_sabato <- read_csv("sabato_crystal_ball_ratings.csv") |>
rename(state_abb = state)
state_abb_xwalk <- d_state_pv |>
mutate(state_abb = state.abb[match(d_state_pv$state, state.name)]) |>
select(state, state_abb) |>
distinct()
state_abb_xwalk[51,]$state <- "District of Columbia"
state_abb_xwalk[51,]$state_abb <- "DC"
d_sabato <- d_sabato |>
left_join(state_abb_xwalk, by = "state_abb") |>
mutate(safe_D = as.numeric(rating == 1),
likely_D = as.numeric(rating == 2),
lean_D = as.numeric(rating == 3),
toss_up = as.numeric(rating == 4),
lean_R = as.numeric(rating == 5),
likely_R = as.numeric(rating == 6),
safe_R = as.numeric(rating == 7)) |>
rename(sabato_rating = rating)
# table 2: former vp descriptive
vp_table <- d_pv |>
filter(year %in% c(1960, 1964, 1968, 1984, 1988, 2000, 2020)) |>
mutate(vp = if_else(candidate %in% c("Nixon, Richard M.",
"Johnson, Lyndon B.",
"Humphrey, Hubert",
"Mondale, Walter",
"Bush, George H.W.",
"Gore, Al",
"Biden, Joseph R."), 1, 0)) |>
filter(vp == 1) |>
group_by(winner) |>
summarise(n = n()) |>
mutate(percent = round((n / sum(n)) * 100, 2))
knitr::kable(vp_table,
col.names = c("VP Elected", "Number of Elections", "Percentage")) |>
kableExtra::kable_styling(full_width = FALSE)
library(blogdown)
build_site(build_rmd = TRUE)
