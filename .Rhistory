library(ggpubr)
library(tigris)
library(sf)
library(tools)
# import data
national_results <- read_excel("national_results.xlsx")
state_results <- read_excel("state_results.xlsx")
d_state_2024 <- read_csv("state_votes_pres_2024.csv")
d_state_2024 <- d_state_2024 |>
mutate(FIPS = as.numeric(FIPS),
votes_trump = as.numeric(`Donald J. Trump`),
votes_harris = as.numeric(`Kamala D. Harris`),
votes = as.numeric(`Total Vote`),
trump_2pv = votes_trump/(votes_trump + votes_harris),
harris_2pv = votes_harris/(votes_trump + votes_harris)) |>
mutate(winner = case_when(votes_trump > votes_harris ~ "REP",
.default = "DEM")) |>
select(FIPS, `Geographic Name`, `Geographic Subtype`, votes_trump, votes_harris, votes,
winner, trump_2pv, harris_2pv) |>
filter(`Geographic Name` %in% c("Arizona", "Florida", "Georgia", "Michigan", "Minnesota", "Nevada", "New Hampshire", "New Mexico", "North Carolina", "Pennsylvania", "Texas", "Virginia", "Wisconsin")) |>
rename(state = `Geographic Name`,
D_real = harris_2pv) |>
mutate(D_real = D_real*100) |>
select(state, D_real)
View(d_state_2024)
# hide code
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE)
# import libraries
library(car)
library(caret)
library(CVXR)
library(glmnet)
library(tidyverse)
library(patchwork)
library(knitr)
library(sjPlot)
library(kableExtra)
library(maps)
library(readr)
library(stringr)
library(readxl)
library(scales)
library(ggpubr)
library(tigris)
library(sf)
library(tools)
# import data
national_results <- read_excel("national_results.xlsx")
state_results <- read_excel("state_results.xlsx")
d_state_2024 <- read_csv("state_votes_pres_2024.csv")
d_state_2024 <- d_state_2024 |>
mutate(FIPS = as.numeric(FIPS),
votes_trump = as.numeric(`Donald J. Trump`),
votes_harris = as.numeric(`Kamala D. Harris`),
votes = as.numeric(`Total Vote`),
trump_2pv = votes_trump/(votes_trump + votes_harris),
harris_2pv = votes_harris/(votes_trump + votes_harris)) |>
mutate(winner = case_when(votes_trump > votes_harris ~ "REP",
.default = "DEM")) |>
select(FIPS, `Geographic Name`, `Geographic Subtype`, votes_trump, votes_harris, votes,
winner, trump_2pv, harris_2pv) |>
filter(`Geographic Name` %in% c("Arizona", "Florida", "Georgia", "Michigan", "Minnesota", "Nevada", "New Hampshire", "New Mexico", "North Carolina", "Pennsylvania", "Texas", "Virginia", "Wisconsin")) |>
rename(state = `Geographic Name`,
D_real = harris_2pv) |>
mutate(D_real = round(D_real*100),2) |>
select(state, D_real)
View(d_state_2024)
# hide code
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE)
# import libraries
library(car)
library(caret)
library(CVXR)
library(glmnet)
library(tidyverse)
library(patchwork)
library(knitr)
library(sjPlot)
library(kableExtra)
library(maps)
library(readr)
library(stringr)
library(readxl)
library(scales)
library(ggpubr)
library(tigris)
library(sf)
library(tools)
# import data
national_results <- read_excel("national_results.xlsx")
state_results <- read_excel("state_results.xlsx")
d_state_2024 <- read_csv("state_votes_pres_2024.csv")
d_state_2024 <- d_state_2024 |>
mutate(FIPS = as.numeric(FIPS),
votes_trump = as.numeric(`Donald J. Trump`),
votes_harris = as.numeric(`Kamala D. Harris`),
votes = as.numeric(`Total Vote`),
trump_2pv = votes_trump/(votes_trump + votes_harris),
harris_2pv = votes_harris/(votes_trump + votes_harris)) |>
mutate(winner = case_when(votes_trump > votes_harris ~ "REP",
.default = "DEM")) |>
select(FIPS, `Geographic Name`, `Geographic Subtype`, votes_trump, votes_harris, votes,
winner, trump_2pv, harris_2pv) |>
filter(`Geographic Name` %in% c("Arizona", "Florida", "Georgia", "Michigan", "Minnesota", "Nevada", "New Hampshire", "New Mexico", "North Carolina", "Pennsylvania", "Texas", "Virginia", "Wisconsin")) |>
rename(state = `Geographic Name`,
D_real = harris_2pv) |>
mutate(D_real = round(D_real*100, 2)) |>
select(state, D_real)
ggplot(national_results, aes(x = fit, y = 1)) +
geom_segment(aes(x = lwr, xend = upr), color = "lightgray", size = 2) +
geom_point(aes(x = fit), color = "black", size = 3) +
geom_point(aes(x = real), color = "gold3", size = 3) +
labs(title = "National Model Accuracy Assessment",
x = "Incumbent Party Candidate National Popular Vote Share (%)",
y = "") +
theme_minimal() +
scale_x_continuous(breaks = seq(45, 58, by = 2)) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
plot.title.position = "plot",
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
) +
geom_label(aes(x = 47.45, label = "47.45"), color = "black", fill = "#FFD1D1", vjust = 2.5, size = 4, label.size = 0.5) +
geom_label(aes(x = 51.96, label = "51.96"), color = "black", fill = "white", vjust = 2.5, size = 4, label.size = 0.5) +
geom_label(aes(x = 48.72, label = "48.72"), color = "black", fill = "#EEE8AA", vjust = 2.5, size = 4, label.size = 0.5) +
geom_label(aes(x = 56.47, label = "56.47"), color = "black", fill = "#D3E5FF", vjust = 2.5, size = 4, label.size = 0.5) +
geom_vline(xintercept = 50, color = "firebrick", linetype = "dashed", size = 1)
# hide code
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE)
# import libraries
library(car)
library(caret)
library(CVXR)
library(glmnet)
library(tidyverse)
library(patchwork)
library(knitr)
library(sjPlot)
library(kableExtra)
library(maps)
library(readr)
library(stringr)
library(readxl)
library(scales)
library(ggpubr)
library(tigris)
library(sf)
library(tools)
# import data
national_results <- read_excel("national_results.xlsx")
state_results <- read_excel("state_results.xlsx")
d_state_2024 <- read_csv("state_votes_pres_2024.csv")
d_state_2024 <- d_state_2024 |>
mutate(FIPS = as.numeric(FIPS),
votes_trump = as.numeric(`Donald J. Trump`),
votes_harris = as.numeric(`Kamala D. Harris`),
votes = as.numeric(`Total Vote`),
trump_2pv = votes_trump/(votes_trump + votes_harris),
harris_2pv = votes_harris/(votes_trump + votes_harris)) |>
mutate(winner = case_when(votes_trump > votes_harris ~ "REP",
.default = "DEM")) |>
select(FIPS, `Geographic Name`, `Geographic Subtype`, votes_trump, votes_harris, votes,
winner, trump_2pv, harris_2pv) |>
filter(`Geographic Name` %in% c("Arizona", "Florida", "Georgia", "Michigan", "Minnesota", "Nevada", "New Hampshire", "New Mexico", "North Carolina", "Pennsylvania", "Texas", "Virginia", "Wisconsin")) |>
rename(state = `Geographic Name`,
D_real = harris_2pv) |>
mutate(D_real = round(D_real*100, 2)) |>
select(state, D_real)
state_results <- state_results |>
left_join(d_state_2024, by = "state")
View(state_results)
ggplot(national_results, aes(x = fit, y = 1)) +
geom_segment(aes(x = lwr, xend = upr), color = "lightgray", size = 2) +
geom_point(aes(x = fit), color = "black", size = 3) +
geom_point(aes(x = real), color = "gold3", size = 3) +
labs(title = "National Model Accuracy Assessment",
x = "Incumbent Party Candidate National Popular Vote Share (%)",
y = "") +
theme_minimal() +
scale_x_continuous(breaks = seq(45, 58, by = 2)) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
plot.title.position = "plot",
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
) +
geom_label(aes(x = 47.45, label = "47.45"), color = "black", fill = "#FFD1D1", vjust = 2.5, size = 4, label.size = 0.5) +
geom_label(aes(x = 51.96, label = "51.96"), color = "black", fill = "white", vjust = 2.5, size = 4, label.size = 0.5) +
geom_label(aes(x = 48.72, label = "48.72"), color = "black", fill = "#EEE8AA", vjust = 2.5, size = 4, label.size = 0.5) +
geom_label(aes(x = 56.47, label = "56.47"), color = "black", fill = "#D3E5FF", vjust = 2.5, size = 4, label.size = 0.5) +
geom_vline(xintercept = 50, color = "firebrick", linetype = "dashed", size = 1)
state_error <- state_results |>
mutate(error = D_fit - D_real) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
rmse <- sqrt(mean((state_results$D_real - state_results$D_fit) ^ 2))
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error Margin")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error <- state_results |>
mutate(error = D_fit - D_real) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
bias <- mean(state_results$D_real - state_results$D_fit)
rmse <- sqrt(mean((state_results$D_real - state_results$D_fit) ^ 2))
mae <- mean(abs(state_results$D_real - state_results$D_fit))
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error Margin")) |>
kableExtra::kable_styling(full_width = FALSE)
state_results |>
group_by(state) |>
summarize(
bias = mean(D_real - D_fit),
rmse = sqrt(mean((D_real - D_fit) ^ 2)),
mae = mean(abs(D_real - D_fit))
)
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error Margin")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error <- state_results |>
mutate(error = D_fit - D_real) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
bias <- mean(state_results$D_real - state_results$D_fit)
rmse <- sqrt(mean((state_results$D_real - state_results$D_fit) ^ 2))
mae <- mean(abs(state_results$D_real - state_results$D_fit))
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error Margin")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error <- state_results |>
mutate(error = D_fit - D_real) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
bias <- mean(state_results$D_real - state_results$D_fit)
rmse <- sqrt(mean((state_results$D_real - state_results$D_fit) ^ 2))
mae <- mean(abs(state_results$D_real - state_results$D_fit))
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error Margin")) |>
kableExtra::kable_styling(full_width = FALSE)
View(state_results)
bias <- mean(state_results$D_real - state_results$D_fit)
state_error <- state_results |>
mutate(error = D_fit - D_real) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
state_results |>
summarize(
bias = mean(D_real-D_fit),
rmse = sqrt(mean((D_real-D_fit)^2)),
mae = mean(abs(D_real-D_fit))
)
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error Margin")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error <- state_results |>
mutate(error = D_fit - D_real) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
state_results |>
summarize(
bias = round(mean(D_real-D_fit),2),
rmse = round(sqrt(mean((D_real-D_fit)^2)),2),
mae = round(mean(abs(D_real-D_fit)),2)
)
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error Margin")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error <- state_results |>
mutate(error = D_fit - D_real) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error Margin")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error <- state_results |>
mutate(error = D_fit - D_real) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error <- state_results |>
mutate(error = D_real - D_fit) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error_2 <- state_results |>
mutate(error = D_real - D_fit) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
knitr::kable(state_error_2,
col.names = c("State", "Prediction", "Result", "Error")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error <- state_results |>
summarize(
bias = round(mean(D_real-D_fit),2),
rmse = round(sqrt(mean((D_real-D_fit)^2)),2),
mae = round(mean(abs(D_real-D_fit)),2)
)
knitr::kable(state_error,
col.names = c("Bias", "RMSE", "MAE")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error <- state_results |>
mutate(error = D_real - D_fit) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error_2 <- state_results |>
summarize(
bias = round(mean(D_real-D_fit),2),
rmse = round(sqrt(mean((D_real-D_fit)^2)),2),
mae = round(mean(abs(D_real-D_fit)),2)
)
knitr::kable(state_error_2,
col.names = c("Bias", "RMSE", "MAE")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error <- state_results |>
mutate(error = D_real - D_fit) |>
select(state, D_fit, D_real, error) |>
arrange(desc(error))
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error")) |>
kableExtra::kable_styling(full_width = FALSE)
state_error <- state_results |>
mutate(error = D_real - D_fit) |>
select(state, D_fit, D_real, error) |>
arrange(error)
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error")) |>
kableExtra::kable_styling(full_width = FALSE)
ggplot(state_results, aes(x = D_fit, y = state)) +
geom_segment(aes(x = D_lwr, xend = D_upr, yend = state), color = "lightgray", size = 2) +
geom_point(aes(x = D_fit), color = "black", size = 3) +
geom_point(aes(x = D_real), color = "gold3", size = 3) +
geom_vline(xintercept = 50, color = "firebrick", linetype = "dashed", size = 1) +
labs(title = "State Model Accuracy Assessment",
x = "Democratic Vote Share (%)",
y = "State") +
theme_minimal() +
scale_x_continuous(breaks = seq(40, 60, by = 5)) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14))
state_results |>
mutate(R_fit = 100 - D_fit,
R_lwr = 100 - D_upr,
R_upr = 100 - D_lwr,
margin = D_fit - R_fit,
margin_lwr = D_lwr - R_fit,
margin_upr = D_upr - R_fit,
R_real = 100 - D_real,
real_margin = D_real - R_real,
state = reorder(state, margin)) |>
ggplot(aes(x = margin, y = state)) +
geom_segment(aes(x = margin_lwr, xend = margin_upr, yend = state), color = "lightgray", size = 2) +
geom_point(aes(x = margin), color = "black", size = 3) +
geom_point(aes(x = real_margin), color = "gold3", size = 3) +
geom_vline(xintercept = 0, color = "firebrick", linetype = "dashed", size = 1) +
labs(title = "State Model Win Margins Accuracy Assessment",
x = "Democratic Win Margin (%)",
y = "State") +
theme_minimal() +
scale_x_continuous(breaks = seq(-15, 15, by = 5)) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14))
# hide code
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE)
# import libraries
library(car)
library(caret)
library(CVXR)
library(glmnet)
library(tidyverse)
library(patchwork)
library(knitr)
library(sjPlot)
library(kableExtra)
library(maps)
library(readr)
library(stringr)
library(readxl)
library(scales)
library(ggpubr)
library(tigris)
library(sf)
library(tools)
# import my predictions
national_results <- read_excel("national_results.xlsx")
state_results <- read_excel("state_results.xlsx")
# clean state results data
d_state_2024 <- read_csv("state_votes_pres_2024.csv")
d_state_2024 <- d_state_2024 |>
mutate(FIPS = as.numeric(FIPS),
votes_trump = as.numeric(`Donald J. Trump`),
votes_harris = as.numeric(`Kamala D. Harris`),
votes = as.numeric(`Total Vote`),
trump_2pv = votes_trump/(votes_trump + votes_harris),
harris_2pv = votes_harris/(votes_trump + votes_harris)) |>
mutate(winner = case_when(votes_trump > votes_harris ~ "REP",
.default = "DEM")) |>
select(FIPS, `Geographic Name`, `Geographic Subtype`, votes_trump, votes_harris, votes,
winner, trump_2pv, harris_2pv) |>
filter(`Geographic Name` %in% c("Arizona", "Florida", "Georgia", "Michigan", "Minnesota", "Nevada", "New Hampshire", "New Mexico", "North Carolina", "Pennsylvania", "Texas", "Virginia", "Wisconsin")) |>
rename(state = `Geographic Name`,
D_real = harris_2pv) |>
mutate(D_real = round(D_real*100, 2)) |>
select(state, D_real)
state_results <- state_results |>
left_join(d_state_2024, by = "state")
# figure 1: national model assessment
ggplot(national_results, aes(x = fit, y = 1)) +
geom_segment(aes(x = lwr, xend = upr), color = "lightgray", size = 2) +
geom_point(aes(x = fit), color = "black", size = 3) +
geom_point(aes(x = real), color = "gold3", size = 3) +
labs(title = "National Model Accuracy Assessment",
x = "Incumbent Party Candidate National Popular Vote Share (%)",
y = "") +
theme_minimal() +
scale_x_continuous(breaks = seq(45, 58, by = 2)) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
plot.title.position = "plot",
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
) +
geom_label(aes(x = 47.45, label = "47.45"), color = "black", fill = "#FFD1D1", vjust = 2.5, size = 4, label.size = 0.5) +
geom_label(aes(x = 51.96, label = "51.96"), color = "black", fill = "white", vjust = 2.5, size = 4, label.size = 0.5) +
geom_label(aes(x = 48.72, label = "48.72"), color = "black", fill = "#EEE8AA", vjust = 2.5, size = 4, label.size = 0.5) +
geom_label(aes(x = 56.47, label = "56.47"), color = "black", fill = "#D3E5FF", vjust = 2.5, size = 4, label.size = 0.5) +
geom_vline(xintercept = 50, color = "firebrick", linetype = "dashed", size = 1)
# calculate errors
state_error <- state_results |>
mutate(error = D_real - D_fit) |>
select(state, D_fit, D_real, error) |>
arrange(error)
# table 1: state errors
knitr::kable(state_error,
col.names = c("State", "Prediction", "Result", "Error")) |>
kableExtra::kable_styling(full_width = FALSE)
# calculate error statistics
state_error_2 <- state_results |>
summarize(
bias = round(mean(D_real-D_fit),2),
rmse = round(sqrt(mean((D_real-D_fit)^2)),2),
mae = round(mean(abs(D_real-D_fit)),2)
)
# table 2: state error statistics
knitr::kable(state_error_2,
col.names = c("Bias", "RMSE", "MAE")) |>
kableExtra::kable_styling(full_width = FALSE)
# figure 2: state model assessment
ggplot(state_results, aes(x = D_fit, y = state)) +
geom_segment(aes(x = D_lwr, xend = D_upr, yend = state), color = "lightgray", size = 2) +
geom_point(aes(x = D_fit), color = "black", size = 3) +
geom_point(aes(x = D_real), color = "gold3", size = 3) +
geom_vline(xintercept = 50, color = "firebrick", linetype = "dashed", size = 1) +
labs(title = "State Model Accuracy Assessment",
x = "Democratic Vote Share (%)",
y = "State") +
theme_minimal() +
scale_x_continuous(breaks = seq(40, 60, by = 5)) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14))
# figure 3: state win margins assessment
state_results |>
mutate(R_fit = 100 - D_fit,
R_lwr = 100 - D_upr,
R_upr = 100 - D_lwr,
margin = D_fit - R_fit,
margin_lwr = D_lwr - R_fit,
margin_upr = D_upr - R_fit,
R_real = 100 - D_real,
real_margin = D_real - R_real,
state = reorder(state, margin)) |>
ggplot(aes(x = margin, y = state)) +
geom_segment(aes(x = margin_lwr, xend = margin_upr, yend = state), color = "lightgray", size = 2) +
geom_point(aes(x = margin), color = "black", size = 3) +
geom_point(aes(x = real_margin), color = "gold3", size = 3) +
geom_vline(xintercept = 0, color = "firebrick", linetype = "dashed", size = 1) +
labs(title = "State Model Win Margins Accuracy Assessment",
x = "Democratic Win Margin (%)",
y = "State") +
theme_minimal() +
scale_x_continuous(breaks = seq(-15, 15, by = 5)) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14))
build_site(build_rmd=TRUE)
library(blogdown)
build_site(build_rmd=TRUE)
library(blogdown)
build_site(build_rmd = TRUE)
blogdown:::new_post_addin()
library(blogdown)
build_site(build_rmd = TRUE)
