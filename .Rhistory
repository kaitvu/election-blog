select(state, cook_rating, sabato_rating) |>
mutate(cook_rating = factor(cook_rating, levels = 1:7,
labels = c("Solid Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Solid Republican")),
sabato_rating = factor(sabato_rating, levels = 1:7,
labels = c("Safe Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Safe Republican")))
color_palette <- c("Solid Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Toss Up" = "#CCCCCC",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Solid Republican" = "firebrick3")
knitr::kable(mismatch_table,
col.names = c("State", "Cook Political Review", "Sabato Crystal Ball")) |>
kableExtra::kable_styling(full_width = FALSE) |>
column_spec(2,
background = color_palette[mismatch_table$cook_rating],
color = "white") |>
column_spec(3,
background = color_palette[mismatch_table$sabato_rating],
color = "white")
# merge with state pv data
d_state_pv_2020 <- d_state_pv |>
filter(year == 2020) |>
mutate(R_pv2p = 100-D_pv2p) |>
select(state, year, R_pv2p, D_pv2p) |>
mutate(margin = D_pv2p - R_pv2p,
winner = ifelse(D_pv2p > R_pv2p, "D", "R"))
d_state_vote_2020[d_state_vote_2020$state == "District Of Columbia",]$state <- "District of Columbia"
View(d_cook_1)
View(d_expert)
View(d_cook_1)
View(d_pollav_nat)
View(d_pv)
View(d_sabato)
View(d_sabato_1)
View(d_sabato_1)
View(d_sabato_1)
View(d_sabato_2)
View(d_sabato_1)
View(d_sabato)
View(d_sabato_2)
View(d_sabato_1)
View(d_cook)
View(d_cook_1)
# sabato 2020 map
d_sabato_2020 <- d_sabato |>
filter(year == 2020) |>
mutate(sabato_text_rating = factor(sabato_rating, levels = 1:7,
labels = c("Safe Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Safe Republican"))) |>
select(state, sabato_rating, sabato_text_rating)
sabato_map <- d_sabato_2020 |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = sabato_text_rating), color = "white") +
scale_fill_manual(values = c(
"Safe Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Safe Republican" = "firebrick3"),
labels = c("Safe Democrat",
"Likely Democrat",
"Lean Democrat",
"Lean Republican",
"Likely Republican",
"Safe Republican")) +
labs(
title = "Sabato Crystal Ball",
fill = "Rating"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# cook political 2020 map
d_cook_2020 <- d_cook |>
filter(Cycle == 2020) |>
mutate(cook_text_rating = factor(rating_numeric, levels = 1:7,
labels = c("Solid Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Solid Republican"))) |>
rename(state = State,
cook_rating = rating_numeric) |>
select(cook_text_rating, state, cook_rating)
cook_map <- d_cook_2020 |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = cook_text_rating), color = "white") +
scale_fill_manual(values = c(
"Solid Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Toss Up" = "#CCCCCC",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Solid Republican" = "firebrick3"),
labels = c("Solid Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Solid Republican")) +
labs(
title = "Cook Political Review",
fill = "Rating"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# actual 2024 map
actual_map <- d_state_pv |>
filter(year == 2020) |>
mutate(R_pv2p = 100-D_pv2p,
winner = ifelse(R_pv2p > D_pv2p, "Republican", "Democrat")) |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = winner), color = "white") +
scale_fill_manual(values = c(
"Democrat" = "dodgerblue4",
"Republican" = "firebrick3"
)) +
labs(
title = "Actual 2020 Map",
fill = "Winner"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# plot 1: expert prediction 2020 maps
cook_map + sabato_map + actual_map + plot_layout(nrow = 2)
# sabato 2020 map
d_sabato_2020 <- d_sabato |>
filter(year == 2020) |>
mutate(sabato_text_rating = factor(sabato_rating, levels = 1:7,
labels = c("Safe Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Safe Republican"))) |>
select(state, sabato_rating, sabato_text_rating)
sabato_map <- d_sabato_2020 |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = sabato_text_rating), color = "white") +
scale_fill_manual(values = c(
"Safe Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Safe Republican" = "firebrick3"),
labels = c("Safe Democrat",
"Likely Democrat",
"Lean Democrat",
"Lean Republican",
"Likely Republican",
"Safe Republican")) +
labs(
title = "Sabato Crystal Ball",
fill = "Rating"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# cook political 2020 map
d_cook_2020 <- d_cook |>
filter(Cycle == 2020) |>
mutate(cook_text_rating = factor(rating_numeric, levels = 1:7,
labels = c("Solid Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Solid Republican"))) |>
rename(state = State,
cook_rating = rating_numeric) |>
select(cook_text_rating, state, cook_rating)
cook_map <- d_cook_2020 |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = cook_text_rating), color = "white") +
scale_fill_manual(values = c(
"Solid Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Toss Up" = "#CCCCCC",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Solid Republican" = "firebrick3"),
labels = c("Solid Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Solid Republican")) +
labs(
title = "Cook Political Review",
fill = "Rating"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# actual 2024 map
actual_map <- d_state_pv |>
filter(year == 2020) |>
mutate(R_pv2p = 100-D_pv2p,
winner = ifelse(R_pv2p > D_pv2p, "Republican", "Democrat")) |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = winner), color = "white") +
scale_fill_manual(values = c(
"Democrat" = "dodgerblue4",
"Republican" = "firebrick3"
)) +
labs(
title = "Actual 2020 Map",
fill = "Winner"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# plot 1: expert prediction 2020 maps
cook_map + sabato_map + actual_map + plot_layout(nrow = 2)
# sabato 2020 map
d_sabato_2020 <- d_sabato |>
filter(year == 2020) |>
mutate(sabato_text_rating = factor(sabato_rating, levels = 1:7,
labels = c("Safe Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Safe Republican"))) |>
select(state, sabato_rating, sabato_text_rating)
sabato_map <- d_sabato_2020 |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = sabato_text_rating), color = "white") +
scale_fill_manual(values = c(
"Safe Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Safe Republican" = "firebrick3"),
labels = c("Safe Democrat",
"Likely Democrat",
"Lean Democrat",
"Lean Republican",
"Likely Republican",
"Safe Republican")) +
labs(
title = "Sabato Crystal Ball",
fill = "Rating"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# cook political 2020 map
d_cook_2020 <- d_cook |>
filter(Cycle == 2020) |>
mutate(cook_text_rating = factor(rating_numeric, levels = 1:7,
labels = c("Solid Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Solid Republican"))) |>
rename(state = State,
cook_rating = rating_numeric) |>
select(cook_text_rating, state, cook_rating)
cook_map <- d_cook_2020 |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = cook_text_rating), color = "white") +
scale_fill_manual(values = c(
"Solid Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Toss Up" = "#CCCCCC",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Solid Republican" = "firebrick3"),
labels = c("Solid Democrat",
"Likely Democrat",
"Lean Democrat",
"Toss Up",
"Lean Republican",
"Likely Republican",
"Solid Republican")) +
labs(
title = "Cook Political Review",
fill = "Rating"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# actual 2024 map
actual_map <- d_state_pv |>
filter(year == 2020) |>
mutate(R_pv2p = 100-D_pv2p,
winner = ifelse(R_pv2p > D_pv2p, "Republican", "Democrat")) |>
left_join(states, by = "state") |>
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = winner), color = "white") +
scale_fill_manual(values = c(
"Democrat" = "dodgerblue4",
"Republican" = "firebrick3"
)) +
labs(
title = "Actual 2020 Map",
fill = "Winner"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12, vjust = 2)
)
# plot 1: expert prediction 2020 maps
cook_map + sabato_map + actual_map + plot_layout(nrow = 2)
d_expert <- d_cook_2020 |>
left_join(d_sabato_2020, by = "state") |>
mutate(rating_match = as.numeric(cook_rating == sabato_rating))
mismatch_table <- d_expert[d_expert$state %in% c(d_expert$state[d_expert$rating_match == 0]),]
View(mismatch_table)
mismatch_table <- d_expert[d_expert$state %in% c(d_expert$state[d_expert$rating_match == 0]),] |>
select(state, cook_text_rating, sabato_text_rating)
View(mismatch_table)
# expert prediction data set
d_expert <- d_cook_2020 |>
left_join(d_sabato_2020, by = "state") |>
mutate(rating_match = as.numeric(cook_rating == sabato_rating))
# table 5: expert mismatch table
mismatch_table <- d_expert[d_expert$state %in% c(d_expert$state[d_expert$rating_match == 0]),] |>
select(state, cook_text_rating, sabato_text_rating)
color_palette <- c("Solid Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Toss Up" = "#CCCCCC",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Solid Republican" = "firebrick3")
knitr::kable(mismatch_table,
col.names = c("State", "Cook Political Review", "Sabato Crystal Ball")) |>
kableExtra::kable_styling(full_width = FALSE) |>
column_spec(2,
background = color_palette[mismatch_table$cook_rating],
color = "white") |>
column_spec(3,
background = color_palette[mismatch_table$sabato_rating],
color = "white")
# expert prediction data set
d_expert <- d_cook_2020 |>
left_join(d_sabato_2020, by = "state") |>
mutate(rating_match = as.numeric(cook_rating == sabato_rating))
# table 5: expert mismatch table
mismatch_table <- d_expert[d_expert$state %in% c(d_expert$state[d_expert$rating_match == 0]),] |>
select(state, cook_text_rating, sabato_text_rating)
color_palette <- c("Solid Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Toss Up" = "#CCCCCC",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Solid Republican" = "firebrick3")
knitr::kable(mismatch_table,
col.names = c("State", "Cook Political Review", "Sabato Crystal Ball")) |>
kableExtra::kable_styling(full_width = FALSE) |>
column_spec(2,
background = color_palette[mismatch_table$cook_text_rating],
color = "white") |>
column_spec(3,
background = color_palette[mismatch_table$sabato_text_rating],
color = "white")
# expert prediction data set
d_expert <- d_cook_2020 |>
left_join(d_sabato_2020, by = "state") |>
mutate(rating_match = as.numeric(cook_rating == sabato_rating))
# table 5: expert mismatch table
mismatch_table <- d_expert[d_expert$state %in% c(d_expert$state[d_expert$rating_match == 0]),] |>
select(state, cook_text_rating, sabato_text_rating)
color_palette <- c("Solid Democrat" = "dodgerblue4",
"Likely Democrat" = "#6699FF",
"Lean Democrat" = "#99CCFF",
"Toss Up" = "#CCCCCC",
"Lean Republican" = "#FF9999",
"Likely Republican" = "#FF6666",
"Solid Republican" = "firebrick3",
"Democrat" = "dodgerblue4",
"Republican" = "firebrick3")
knitr::kable(mismatch_table,
col.names = c("State", "Cook Political Review", "Sabato Crystal Ball")) |>
kableExtra::kable_styling(full_width = FALSE) |>
column_spec(2,
background = color_palette[mismatch_table$cook_text_rating],
color = "white") |>
column_spec(3,
background = color_palette[mismatch_table$sabato_text_rating],
color = "white")
# merge with state pv data
d_state_pv_2020 <- d_state_pv |>
filter(year == 2020) |>
mutate(R_pv2p = 100-D_pv2p) |>
select(state, year, R_pv2p, D_pv2p) |>
mutate(margin = D_pv2p - R_pv2p,
winner = ifelse(D_pv2p > R_pv2p, "D", "R"))
d_state_vote_2020[d_state_vote_2020$state == "District Of Columbia",]$state <- "District of Columbia"
# merge with state pv data
d_state_pv_2020 <- d_state_pv |>
filter(year == 2020) |>
mutate(R_pv2p = 100-D_pv2p) |>
select(state, year, R_pv2p, D_pv2p) |>
mutate(margin = D_pv2p - R_pv2p,
winner = ifelse(D_pv2p > R_pv2p, "D", "R"))
d_state_pv_2020[d_state_pv_2020$state == "District Of Columbia",]$state <- "District of Columbia"
d_expert_2 <- d_expert |>
left_join(d_state_pv_2020, by = "state")
d_expert_2 <- d_expert_2 |>
mutate(cook_correct = as.numeric((winner == "D" & cook_rating < 4) |
(winner == "R" & cook_rating > 4)),
sabato_correct = as.numeric((winner == "D" & sabato_rating < 4) |
(winner == "R" & sabato_rating > 4))) |>
drop_na()
# table 6: expert correct table
correct_table <- d_expert_new |>
select(cook_correct, sabato_correct) |>
colMeans()
# merge with state pv data
d_state_pv_2020 <- d_state_pv |>
filter(year == 2020) |>
mutate(R_pv2p = 100-D_pv2p) |>
select(state, year, R_pv2p, D_pv2p) |>
mutate(margin = D_pv2p - R_pv2p,
winner = ifelse(D_pv2p > R_pv2p, "D", "R"))
d_state_pv_2020[d_state_pv_2020$state == "District Of Columbia",]$state <- "District of Columbia"
d_expert <- d_expert |>
left_join(d_state_pv_2020, by = "state") |>
mutate(cook_correct = as.numeric((winner == "D" & cook_rating < 4) |
(winner == "R" & cook_rating > 4)),
sabato_correct = as.numeric((winner == "D" & sabato_rating < 4) |
(winner == "R" & sabato_rating > 4))) |>
drop_na()
# table 6: expert correct table
correct_table <- d_expert_2 |>
select(cook_correct, sabato_correct) |>
colMeans()
correct_table <- as.data.frame(t(correct_table))
correct_table <- correct_table |>
pivot_longer(cols = everything(),
names_to = "Model",
values_to = "Percent Correct")
correct_table$Model <- recode(correct_table$Model,
cook_correct = "Cook Political Review",
sabato_correct = "Sabato Crystal Ball")
correct_table$`Percent Correct` <- correct_table$`Percent Correct` * 100
knitr::kable(correct_table,
col.names = c("Model", "Percent Correct")) |>
kableExtra::kable_styling(full_width = FALSE)
View(d_expert)
# merge with state pv data
d_state_pv_2020 <- d_state_pv |>
filter(year == 2020) |>
mutate(R_pv2p = 100-D_pv2p) |>
select(state, year, R_pv2p, D_pv2p) |>
mutate(margin = D_pv2p - R_pv2p,
winner = ifelse(D_pv2p > R_pv2p, "D", "R"))
d_state_pv_2020[d_state_pv_2020$state == "District Of Columbia",]$state <- "District of Columbia"
d_expert <- d_expert |>
left_join(d_state_pv_2020, by = "state") |>
mutate(cook_correct = as.numeric((winner == "D" & cook_rating < 4) |
(winner == "R" & cook_rating > 4)),
sabato_correct = as.numeric((winner == "D" & sabato_rating < 4) |
(winner == "R" & sabato_rating > 4))) |>
drop_na()
View(d_expert)
